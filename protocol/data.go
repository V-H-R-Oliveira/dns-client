package protocol

// https://datatracker.ietf.org/doc/html/rfc1035

type DNSHeader struct {
	ID      uint16 `json:"id"`           // an unsigned 16 bit integer containing the transaction id generated by the software who made the request.
	Flags   uint16 `json:"-"`            // an unsigned 16 bit integer containing various service flags that are communicated between the DNS client and the DNS server.
	QDCount uint16 `json:"questions"`    // an unsigned 16 bit integer specifying the number of entries in the question section.
	ANCount uint16 `json:"answers"`      // an unsigned 16 bit integer specifying the number of resource records in the answer section.
	NSCount uint16 `json:"name_servers"` // an unsigned 16 bit integer specifying the number of name server resource records in the authority records section.
	ARCount uint16 `json:"-"`            // an unsigned 16 bit integer specifying the number of resource records in the additional records section.
}

type DNSQuestion struct {
	QuestionName  []byte // Encoded domain using the RFC 1035 instructions
	QuestionType  uint16 // QTYPE field of RFC 1035
	QuestionClass uint16 // QCLASS field of RFC 1035, default = 1
}

type DNSQuery struct {
	Header   *DNSHeader
	Question *DNSQuestion
}

type DNSResource struct {
	Name   string
	Type   uint16
	Class  uint16
	TTL    uint32
	Length uint16
	Data   []byte
}

type DNSStringAnswer struct {
	Name   string `json:"domain"`
	Type   uint16 `json:"type"`
	Class  uint16 `json:"class"`
	TTL    uint32 `json:"ttl"`
	Length uint16 `json:"length"`
	Data   string `json:"resource"`
}

type DNSResponse struct {
	Header  *DNSHeader
	Answers []*DNSResource
}

type DNSStringResponse struct {
	Header  *DNSHeader         `json:"header"`
	Answers []*DNSStringAnswer `json:"answers"`
}

const (
	RESPONSE                = 1 << 15 // Request = 0, Response = 1
	OPERATION               = 1<<14 | 1<<13 | 1<<12 | 1<<11
	AUTH_ANSWER             = 1 << 10
	TRUNCATION              = 1 << 9
	REC_DISERED             = 1 << 8
	REC_AVAILABLE           = 1 << 7
	REVERSE_DNS_IPV4_DOMAIN = ".in-addr.arpa"
	REVERSE_DNS_IPV6_DOMAIN = "ip6.arpa"
	A                       = 1
	AAAA                    = 28
	SOA                     = 6
	NS                      = 2
	CNAME                   = 5
	PTR                     = 12
	QCLASS                  = 1
	RES_OK                  = 0
	RES_FORMAT_ERROR        = 1
	RES_SERVER_FAILURE      = 2
	RES_NAME_ERROR          = 3
	RES_NOT_IMPLEMENTED     = 4
	RES_REFUSED             = 5
	MAX_LABEL_LENGTH        = 63
)
